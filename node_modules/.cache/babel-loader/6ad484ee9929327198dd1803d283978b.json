{"ast":null,"code":"var _jsxFileName = \"/Users/tysonlam/Desktop/Boot-Camp/movie-app/src/components/Review.js\";\nimport React from \"react\";\nimport { useState } from \"react\";\n\n// function Review(){\n//     const [review, setReview]= useState(null);\n//     const [print,setPrint]= useState(false);\n//     //Function to get the data from text area\n//     function getData(val){\n//         setReview(val.target.value)\n//         setPrint(false)\n//     }\n\n//     return(\n//             <div>\n//                 {\n//                     //if print is true then output the review\n//                     print?\n//                     <p>{review}</p>\n//                     :null\n//                 }\n//                 <textarea type='text' onChange={getData} />\n//                 <button onClick={()=>setPrint(true)} className='btn btn-primary'>Submit Review</button>\n//             </div>\n//         )\n// }\n// export default Review;\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Review extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      // title: '',\n      reviewInfo: '',\n      starRating: null\n    };\n    this.submitForm = this.submitForm.bind(this);\n    this.handleReviewChange = this.handleReviewChange.bind(this);\n    this.handleStarChange = this.handleStarChange.bind(this);\n  }\n  resetForm() {\n    this.setState({\n      // title: '',\n      reviewInfo: '',\n      starRating: null\n    });\n  }\n  submitForm() {\n    this.props.onSubmit(this.state);\n    this.resetForm();\n  }\n  handleInputChange(event) {\n    // const target = event.target;\n    // const name = target.name;\n    // const value = target.value;\n    this.setState({\n      reviewInfo: event.target.value\n    });\n  }\n  handleReviewChange(event) {\n    this.setState({\n      reviewInfo: event.target.value\n    });\n  }\n  handleStarChange(event) {\n    // const target = event.target;\n    // const name = target.name;\n    // const value = target.value;\n    this.setState({\n      starRating: event.target.value\n    });\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Tell us more?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-muted\",\n          children: /*#__PURE__*/_jsxDEV(StarRating, {\n            value: this.state.starRating,\n            onChange: this.handleStarChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"reviewInput\",\n          children: /*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"Review:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 50\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 72\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"reviewInfo\",\n          type: \"text\",\n          id: \"reviewInput\",\n          value: this.state.reviewInfo,\n          onChange: this.handleReviewChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 142\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary\",\n          onClick: this.submitForm,\n          children: \"Add New Review\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this);\n  }\n}","map":{"version":3,"names":["React","useState","Review","Component","constructor","props","state","reviewInfo","starRating","submitForm","bind","handleReviewChange","handleStarChange","resetForm","setState","onSubmit","handleInputChange","event","target","value","render"],"sources":["/Users/tysonlam/Desktop/Boot-Camp/movie-app/src/components/Review.js"],"sourcesContent":["import React from \"react\";\nimport { useState } from \"react\";\n\n// function Review(){\n//     const [review, setReview]= useState(null);\n//     const [print,setPrint]= useState(false);\n//     //Function to get the data from text area\n//     function getData(val){\n//         setReview(val.target.value)\n//         setPrint(false)\n//     }\n\n//     return(\n//             <div>\n//                 {\n//                     //if print is true then output the review\n//                     print?\n//                     <p>{review}</p>\n//                     :null\n//                 }\n//                 <textarea type='text' onChange={getData} />\n//                 <button onClick={()=>setPrint(true)} className='btn btn-primary'>Submit Review</button>\n//             </div>\n//         )\n// }\n// export default Review;\n\nexport default class Review extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            // title: '',\n            reviewInfo: '',\n            starRating: null,\n        }\n\n        this.submitForm = this.submitForm.bind(this);\n        this.handleReviewChange = this.handleReviewChange.bind(this);\n        this.handleStarChange = this.handleStarChange.bind(this);\n    }\n\n\n    resetForm() {\n        this.setState({\n            // title: '',\n            reviewInfo: '',\n            starRating: null,\n        });\n    }\n\n    submitForm() {\n        this.props.onSubmit(this.state);\n        this.resetForm();\n    }\n\n    handleInputChange(event) {\n            // const target = event.target;\n            // const name = target.name;\n            // const value = target.value;\n            this.setState({\n                reviewInfo: event.target.value\n                \n            });\n        }\n\n    handleReviewChange(event) {\n        this.setState({\n             reviewInfo: event.target.value\n                \n        });\n    }\n\n    handleStarChange(event) {\n        // const target = event.target;\n        // const name = target.name;\n        // const value = target.value;\n        this.setState({\n            starRating: event.target.value\n            \n    });\n}\n\n    render() {\n        return (\n            <div>\n                <form>\n                <h2>Tell us more?</h2>\n                    {/* <label htmlFor=\"titleInput\"><b>Review Title:</b></label><br />\n                    <input name=\"title\" type=\"text\" id=\"titleInput\" value={this.state.title} onChange={this.handleInputChange} /><br /> */}\n                    <span className=\"text-muted\">\n                        <StarRating value={this.state.starRating} onChange={this.handleStarChange}/>\n                    </span>\n                    <label htmlFor=\"reviewInput\"><b>Review:</b></label><br />\n                    <input name=\"reviewInfo\" type=\"text\" id=\"reviewInput\" value={this.state.reviewInfo} onChange={this.handleReviewChange} /><br />\n                    <button className=\"btn btn-primary\" onClick={this.submitForm}>Add New Review</button>\n                </form>\n            </div>\n        );\n    }\n}\n   \n    \n        \n    \n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,OAAO;;AAEhC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA,eAAe,MAAMC,MAAM,SAASF,KAAK,CAACG,SAAS,CAAC;EAChDC,WAAW,CAACC,KAAK,EAAE;IACf,KAAK,CAACA,KAAK,CAAC;IACZ,IAAI,CAACC,KAAK,GAAG;MACT;MACAC,UAAU,EAAE,EAAE;MACdC,UAAU,EAAE;IAChB,CAAC;IAED,IAAI,CAACC,UAAU,GAAG,IAAI,CAACA,UAAU,CAACC,IAAI,CAAC,IAAI,CAAC;IAC5C,IAAI,CAACC,kBAAkB,GAAG,IAAI,CAACA,kBAAkB,CAACD,IAAI,CAAC,IAAI,CAAC;IAC5D,IAAI,CAACE,gBAAgB,GAAG,IAAI,CAACA,gBAAgB,CAACF,IAAI,CAAC,IAAI,CAAC;EAC5D;EAGAG,SAAS,GAAG;IACR,IAAI,CAACC,QAAQ,CAAC;MACV;MACAP,UAAU,EAAE,EAAE;MACdC,UAAU,EAAE;IAChB,CAAC,CAAC;EACN;EAEAC,UAAU,GAAG;IACT,IAAI,CAACJ,KAAK,CAACU,QAAQ,CAAC,IAAI,CAACT,KAAK,CAAC;IAC/B,IAAI,CAACO,SAAS,EAAE;EACpB;EAEAG,iBAAiB,CAACC,KAAK,EAAE;IACjB;IACA;IACA;IACA,IAAI,CAACH,QAAQ,CAAC;MACVP,UAAU,EAAEU,KAAK,CAACC,MAAM,CAACC;IAE7B,CAAC,CAAC;EACN;EAEJR,kBAAkB,CAACM,KAAK,EAAE;IACtB,IAAI,CAACH,QAAQ,CAAC;MACTP,UAAU,EAAEU,KAAK,CAACC,MAAM,CAACC;IAE9B,CAAC,CAAC;EACN;EAEAP,gBAAgB,CAACK,KAAK,EAAE;IACpB;IACA;IACA;IACA,IAAI,CAACH,QAAQ,CAAC;MACVN,UAAU,EAAES,KAAK,CAACC,MAAM,CAACC;IAEjC,CAAC,CAAC;EACN;EAEIC,MAAM,GAAG;IACL,oBACI;MAAA,uBACI;QAAA,wBACA;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAsB,eAGlB;UAAM,SAAS,EAAC,YAAY;UAAA,uBACxB,QAAC,UAAU;YAAC,KAAK,EAAE,IAAI,CAACd,KAAK,CAACE,UAAW;YAAC,QAAQ,EAAE,IAAI,CAACI;UAAiB;YAAA;YAAA;YAAA;UAAA;QAAE;UAAA;UAAA;UAAA;QAAA,QACzE,eACP;UAAO,OAAO,EAAC,aAAa;UAAA,uBAAC;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAc;UAAA;UAAA;UAAA;QAAA,QAAQ;UAAA;UAAA;UAAA;QAAA,QAAM,eACzD;UAAO,IAAI,EAAC,YAAY;UAAC,IAAI,EAAC,MAAM;UAAC,EAAE,EAAC,aAAa;UAAC,KAAK,EAAE,IAAI,CAACN,KAAK,CAACC,UAAW;UAAC,QAAQ,EAAE,IAAI,CAACI;QAAmB;UAAA;UAAA;UAAA;QAAA,QAAG;UAAA;UAAA;UAAA;QAAA,QAAM,eAC/H;UAAQ,SAAS,EAAC,iBAAiB;UAAC,OAAO,EAAE,IAAI,CAACF,UAAW;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAwB;MAAA;QAAA;QAAA;QAAA;MAAA;IAClF;MAAA;MAAA;MAAA;IAAA,QACL;EAEd;AACJ"},"metadata":{},"sourceType":"module"}